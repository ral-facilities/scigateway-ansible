---

- name: "Create install directory"
  file:
    path: "{{ scigateway_dir }}"
    state: directory
    mode: 0755

- name: "Create plugins directory"
  file:
    path: "{{ scigateway_plugins_dir }}"
    state: directory
    mode: 0755

- name: "Download"
  get_url:
    url: "https://github.com/ral-facilities/scigateway/releases/download/{{ scigateway_version }}/scigateway-{{ scigateway_version }}.tar.gz"
    dest: /root/scigateway-{{ scigateway_version }}.tar.gz
    force: "{{ scigateway_version == 'snapshot' }}"

- name: "Unarchive"
  unarchive:
    src: /root/scigateway-{{ scigateway_version }}.tar.gz
    dest: /root/
    remote_src: yes
    extra_opts: --no-same-owner

- name: "Check settings.json file existence"
  local_action: stat path={{ scigateway_settings_file }}
  register: settingsFileResult
  become: false

- name: "Check strings file existence"
  local_action: stat path={{ scigateway_strings_file }}
  register: stringsFileResult
  become: false

- name: "Copy settings.json"
  copy:
    src: "{{ scigateway_settings_file }}"
    dest: /root/scigateway-{{ scigateway_version }}/settings.json
    mode: 0644
  when:
   - settingsFileResult.stat.exists is defined
   - settingsFileResult.stat.exists == true

- name: "Create settings.json"
  template:
    src: templates/settings.json.j2
    dest: /root/scigateway-{{ scigateway_version }}/settings.json
    mode: 0644
  when:
   - settingsFileResult.stat.exists is defined
   - settingsFileResult.stat.exists == false

- name: "Copy default.json"
  copy:
    src: "{{ scigateway_strings_file }}"
    dest: /root/scigateway-{{ scigateway_version }}/res/default.json
    mode: 0644
  when:
   - stringsFileResult.stat.exists is defined
   - stringsFileResult.stat.exists == true

- name: "Install"
  copy:
    src: /root/scigateway-{{ scigateway_version }}/
    dest: "{{ scigateway_dir }}"
    remote_src: yes

- name: "Create apache conf from template"
  template:
    src: templates/apache.conf.j2
    dest: /etc/httpd/conf.d/scigateway.conf
    mode: 0644
  notify:
    - Restart apache

- name: Disable TRACE HTTP method
  lineinfile:
    path: /etc/httpd/conf/httpd.conf
    regexp: "^TraceEnable"
    line: "TraceEnable Off"
    state: present
  notify:
    - Restart apache

- name: Only allow secure SSH algorithms
  lineinfile:
    path: /etc/ssh/ssh_config
    regexp: "{{ item.from }}"
    line: "{{ item.to }}"
    state: present
  with_items:
    - { from: '^KexAlgorithms', to: 'KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256'}
    - { from: '^Ciphers', to: 'Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr'}
    - { from: '^MACs', to: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com'}
  notify:
    - Restart sshd

- name: Open port 443
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "443"
    jump: ACCEPT

- name: Open port 80
  ansible.builtin.iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "80"
    jump: ACCEPT

- name: Start apache
  service:
    name: httpd
    state: started
