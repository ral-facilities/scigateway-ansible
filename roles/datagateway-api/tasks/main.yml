---

- name: "Create group"
  group:
    name: "{{ datagateway_api_group }}"
    state: present

- name: "Create user"
  user:
    name: "{{ datagateway_api_user }}"
    group: "{{ datagateway_api_group }}"
    home: "{{ datagateway_api_home }}"
    shell: /sbin/nologin
    system: yes

- name: "Create home directory"
  file:
    path: "{{ datagateway_api_home }}"
    state: directory
    owner: "{{ datagateway_api_user }}"
    group: "{{ datagateway_api_group }}"
    mode: 0755

- name: "Create log directory"
  file:
    path: "{{ datagateway_api_log }}"
    state: directory
    owner: "{{ datagateway_api_user }}"
    group: "{{ datagateway_api_group }}"
    mode: 0755

- name: Install python3, pip, apache & mod files
  package:
    name:
      - python3
      - python3-pip
      - httpd
      - mod_ssl
      - openssl
      - python3-mod_wsgi
    state: present

# Update pip first because older versions of pip will expect setup.py instead of pyproject.toml
- name: "Update pip in virtualenv"
  pip:
    name: pip
    state: latest
    virtualenv: "{{ datagateway_api_virtualenv }}"
    virtualenv_command: python3 -m venv

- name: "Install into virtualenv"
  pip:
    name: "git+https://github.com/ral-facilities/datagateway-api.git"
    state: latest
    virtualenv: "{{ datagateway_api_virtualenv }}"
    virtualenv_python: python3

- name: "Determine virtualenv site-packages directory"
  shell: "{{ datagateway_api_virtualenv | quote }}/bin/pip3 show datagateway_api | awk '/^Location:/ { print $2 }'"
  register: reg

- name: "Set value of datagateway_api_site_packages"
  set_fact:
    datagateway_api_site_packages: "{{ reg.stdout }}"

- name: "Check config.json file existence"
  local_action: stat path={{ datagateway_api_config_file }}
  register: configFileResult
  become: false

- name: "Copy config.json"
  copy:
    src: "{{ datagateway_api_config_file }}"
    dest: "{{ datagateway_api_site_packages }}/datagateway_api/config.json"
    mode: 0644
  when:
   - configFileResult.stat.exists is defined
   - configFileResult.stat.exists == true
  notify:
  - Restart apache

- name: "Create config.json from template"
  template:
    src: templates/config.json.j2
    dest: "{{ datagateway_api_site_packages }}/datagateway_api/config.json"
    owner: root
    group: root
    mode: 0644
  when:
   - configFileResult.stat.exists is defined
   - configFileResult.stat.exists == false
  notify:
    - Restart apache

- name: "Create apache conf fragment from template"
  set_fact:
    datagateway_api_apache_conf: "{{ lookup('template', 'templates/apache.conf.j2') }}"
